# [Method 1]Tower mass defined by section mass par unit length (kg/m)


DEBUT(PAR_LOT='NON');

#------------------------------------------------------------------------
#                                 MAILLAGE
#------------------------------------------------------------------------
mesh=LIRE_MAILLAGE(FORMAT='MED', UNITE=20, INFO=1);
#MACR_INFO_MAIL(MAILLAGE=mail)
mesh=MODI_MAILLAGE(reuse=mesh, MAILLAGE=mesh,
                   ORIE_LIGNE=_F(GROUP_MA=('Tower'),),
                   INFO = 1,
                  );



#------------------------------------------------------------------------
#                                 MATERIAU
#------------------------------------------------------------------------



#------------------------------------------------------------------------
#                                  MODELE
#------------------------------------------------------------------------    
mod=AFFE_MODELE(MAILLAGE=mesh,
                AFFE=(_F(GROUP_MA=('Tower'),
                         PHENOMENE='MECANIQUE', MODELISATION='DIS_T',),
                     ),);

#------------------------------------------------------------------------
#                        CARACTERISTIQUE DES ELEMENTS
#------------------------------------------------------------------------
Mass = [4.7406054E+04,
4.4317672E+04,
4.1332439E+04,
3.8450356E+04,
3.5671421E+04,
3.2995591E+04,
3.0422867E+04,
2.7953335E+04,
2.5586909E+04,
2.3323588E+04]
discret = []
for i in range(len(Mass)):
    discret.append(_F(GROUP_MA='Seg_'+str(i+1),
			        			CARA='K_T_D_L',
								REPERE='LOCAL',
			        			VALE=(6.1434300E+11, 6.1434300E+11, 1),),
                  )
    discret.append(_F(GROUP_MA='Seg_'+str(i+1),
			        			CARA='M_T_D_L',
								REPERE='LOCAL',
			        			VALE=Mass[i],),
                  )

cara=AFFE_CARA_ELEM(MODELE=mod,
				    DISCRET=discret,
			       );

#------------------------------------------------------------------------
#                         CONDITIONS AUX LIMITES
#------------------------------------------------------------------------
# Type des appuis
ddl=AFFE_CHAR_MECA(MODELE=mod, VERI_NORM='NON',
		   		   DDL_IMPO=_F(GROUP_NO='Groupe_TwrRoot',
			       			   DX=0, DY=0, DZ=0),
                  );


#------------------------------------------------------------------------
#                              MODELISATION
#------------------------------------------------------------------------
# ==================== ANALYSE MODALE =====================
# Calculer les matrices de rigidite, de masse, d'amortissement
ASSEMBLAGE(MODELE=mod, CARA_ELEM=cara, #CHAM_MATER=mat,
           CHARGE=ddl,
           NUME_DDL=CO('numero'),
           MATR_ASSE=(_F(MATRICE=CO('matrAssM'), OPTION='MASS_MECA',),
           			  _F(MATRICE=CO('matrAssR'), OPTION='RIGI_MECA',),
		     		 ),);

# Calcul des modes propres
freq=CALC_MODES(MATR_RIGI=matrAssR, MATR_MASS=matrAssM, #MATR_AMOR=matrAssA,
				 SOLVEUR_MODAL=_F(METHODE='SORENSEN',
								 COEF_DIM_ESPACE=5,),
                 OPTION='CENTRE',
                 CALC_FREQ=_F(NMAX_FREQ=10,
							  FREQ=0.01,
				   			 ),
		         VERI_MODE=_F(STOP_ERREUR='NON',
				   	  		 ),
		     		 );


#------------------------------------------------------------------------
#                             DONNEES DE SORTIE
#------------------------------------------------------------------------
# Masse totale de la structure
masse=POST_ELEM(MODELE=mod, CARA_ELEM=cara, #CHAM_MATER=mat,
           		CHARGE=ddl,
				MASS_INER=_F(TOUT='OUI'),);

# ==================== TABLEAU DES RESULTATS =====================
# Masse
IMPR_TABLE(TABLE=masse,);

# Frequences propres
IMPR_RESU(RESU=_F(RESULTAT=freq,
		  		  NOM_PARA=('FREQ',
		  		  			'MASS_EFFE_DX','MASS_EFFE_DY','MASS_EFFE_DZ'),
		  		  TOUT_CHAM='OUI',
#                  NOM_CHAM='DEPL',
				 ),
	  	  INFO=1,);

# ==================== CARTE DES RESULTATS =====================
# IMPR_RESU(FORMAT='MED',
#       UNITE=80,
#       RESU=(_F(MAILLAGE=mesh,
#           RESULTAT=freq,
#           TOUT_CHAM='OUI',
#           #INST=1.0,
#           ),
#            ),);

FIN();

